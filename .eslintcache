[{"D:\\Project\\Blog\\blog-web\\src\\index.js":"1","D:\\Project\\Blog\\blog-web\\src\\App.js":"2","D:\\Project\\Blog\\blog-web\\src\\components\\Contact.js":"3","D:\\Project\\Blog\\blog-web\\src\\components\\Error.js":"4","D:\\Project\\Blog\\blog-web\\src\\components\\About.js":"5","D:\\Project\\Blog\\blog-web\\src\\components\\Home.js":"6","D:\\Project\\Blog\\blog-web\\src\\components\\SinglePost.js":"7","D:\\Project\\Blog\\blog-web\\src\\components\\elements\\Footer.js":"8","D:\\Project\\Blog\\blog-web\\src\\components\\elements\\Header.js":"9","D:\\Project\\Blog\\blog-web\\src\\constants\\apiPath.js":"10","D:\\Project\\Blog\\blog-web\\src\\constants\\helper.js":"11","D:\\Project\\Blog\\blog-web\\src\\components\\elements\\loginModel.js":"12","D:\\Project\\Blog\\blog-web\\src\\components\\elements\\LoginModel.js":"13","D:\\Project\\Blog\\blog-web\\src\\components\\elements\\SignupModel.js":"14","D:\\Project\\Blog\\blog-web\\src\\components\\elements\\ForgotModel.js":"15","D:\\Project\\Blog\\blog-web\\src\\components\\Profile.js":"16","D:\\Project\\Blog\\blog-web\\src\\containers\\AuthContainer.js":"17","D:\\Project\\Blog\\blog-web\\src\\Services\\constants.js":"18","D:\\Project\\Blog\\blog-web\\src\\Services\\reducers\\index.js":"19","D:\\Project\\Blog\\blog-web\\src\\Services\\actions\\authAction.js":"20","D:\\Project\\Blog\\blog-web\\src\\Services\\reducers\\authReducer.js":"21","D:\\Project\\Blog\\blog-web\\src\\Services\\reducers\\modelReducer.js":"22","D:\\Project\\Blog\\blog-web\\src\\Services\\actions\\modelAction.js":"23","D:\\Project\\Blog\\blog-web\\src\\layout\\defaultLayout.js":"24","D:\\Project\\Blog\\blog-web\\src\\i18nextConf.js":"25","D:\\Project\\Blog\\blog-web\\src\\components\\elements\\Loader.js":"26"},{"size":602,"mtime":1618468463527,"results":"27","hashOfConfig":"28"},{"size":1659,"mtime":1618479446384,"results":"29","hashOfConfig":"28"},{"size":11875,"mtime":1619085212007,"results":"30","hashOfConfig":"28"},{"size":2171,"mtime":1618218615296,"results":"31","hashOfConfig":"28"},{"size":15169,"mtime":1618218603666,"results":"32","hashOfConfig":"28"},{"size":10935,"mtime":1624353076299,"results":"33","hashOfConfig":"28"},{"size":13106,"mtime":1618218693091,"results":"34","hashOfConfig":"28"},{"size":5475,"mtime":1618565089441,"results":"35","hashOfConfig":"28"},{"size":13084,"mtime":1618552924577,"results":"36","hashOfConfig":"28"},{"size":590,"mtime":1619009176581,"results":"37","hashOfConfig":"28"},{"size":2421,"mtime":1617268072857,"results":"38","hashOfConfig":"28"},{"size":3407,"mtime":1616665635157,"results":"39","hashOfConfig":"28"},{"size":6565,"mtime":1619073960660,"results":"40","hashOfConfig":"28"},{"size":7322,"mtime":1618555370626,"results":"41","hashOfConfig":"28"},{"size":3839,"mtime":1618554408710,"results":"42","hashOfConfig":"28"},{"size":12310,"mtime":1618231950341,"results":"43","hashOfConfig":"28"},{"size":469,"mtime":1617713324112,"results":"44","hashOfConfig":"28"},{"size":147,"mtime":1617880259667,"results":"45","hashOfConfig":"28"},{"size":220,"mtime":1617876685841,"results":"46","hashOfConfig":"28"},{"size":564,"mtime":1619082117330,"results":"47","hashOfConfig":"28"},{"size":702,"mtime":1619082140259,"results":"48","hashOfConfig":"28"},{"size":856,"mtime":1617884523185,"results":"49","hashOfConfig":"28"},{"size":1548,"mtime":1617880265123,"results":"50","hashOfConfig":"28"},{"size":544,"mtime":1618218879616,"results":"51","hashOfConfig":"28"},{"size":1155,"mtime":1618468240294,"results":"52","hashOfConfig":"28"},{"size":289,"mtime":1619085795952,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"4qsuub",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"56"},"D:\\Project\\Blog\\blog-web\\src\\index.js",[],["120","121"],"D:\\Project\\Blog\\blog-web\\src\\App.js",[],"D:\\Project\\Blog\\blog-web\\src\\components\\Contact.js",["122","123","124"],"import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport apiUrl from \"../constants/apiPath\"\r\nimport Helper from \"../constants/helper\";\r\nimport Swal from 'sweetalert2';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { saveAuthData } from '../Services/actions/authAction';\r\nimport Loader from './elements/Loader';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    saveAuthData: data => dispatch(saveAuthData(data))\r\n});\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000\r\n});\r\nconst Contact = (props) => {\r\n    console.log(\"PROP Contact1\", props);\r\n    console.log(\"PROP Contact2\", props.data.authData.loader);\r\n    const { t, i18n } = useTranslation();\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [subject, setSubject] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSumbit = async e => {\r\n        props.saveAuthData({ loader: true });\r\n        let jsonData = {\r\n            name: name, email: email, phone: phone, subject: subject, message: message\r\n        }\r\n        let path = apiUrl.contactMail;\r\n        const fr = await Helper.post(jsonData, path);\r\n        const res = await fr.response.json();\r\n        if (fr.status === 200) {\r\n            if (res.status) {\r\n                setName(\"\");\r\n                setEmail(\"\");\r\n                setPhone(\"\");\r\n                setMessage(\"\");\r\n                Toast.fire({\r\n                    type: \"success\",\r\n                    title: res.message,\r\n                })\r\n\r\n            } else {\r\n                Toast.fire({\r\n                    type: \"error\",\r\n                    title: res.message,\r\n                });\r\n            }\r\n            props.saveAuthData({ loader: false });\r\n        } else {\r\n            Toast.fire({\r\n                type: \"error\",\r\n                title: res.message,\r\n            });\r\n            props.saveAuthData({ loader: false });\r\n        }\r\n        //props.history.push('/articlelisting');\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {/* <div classNam=\"edica-loader\"></div> */}\r\n            {props.data.authData.loader && <Loader></Loader>}\r\n            <main>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-11 mx-auto\">\r\n                            <h1 className=\"edica-page-title\" data-aos=\"fade-up\">Contact</h1>\r\n                            <section className=\"edica-contact py-5 mb-5\">\r\n                                <div className=\"row\">\r\n\r\n                                    <div className=\"col-md-8 contact-form-wrapper\">\r\n                                        <Form onSubmit={handleSubmit(onSumbit)} >\r\n                                            <h5 data-aos=\"fade-up\">Contact form</h5>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"form-group col-md-6\" data-aos=\"fade-up\">\r\n                                                    <Form.Group size=\"lg\" controlId=\"name\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                                        <Form.Label>{t('Name')}</Form.Label>\r\n                                                        <Form.Control\r\n                                                            autoFocus\r\n                                                            name=\"name\"\r\n                                                            type=\"text\"\r\n                                                            value={name}\r\n                                                            ref={register({ required: true })}\r\n                                                            onChange={(e) => setName(e.target.value)}\r\n                                                        />\r\n                                                        <span className=\"input_error\">{errors.name && t('Name is required') + '.'} </span>\r\n                                                    </Form.Group>\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-6\" data-aos=\"fade-up\">\r\n                                                    <Form.Group size=\"lg\" controlId=\"phone\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                                        <Form.Label>{t('Phone')}</Form.Label>\r\n                                                        <Form.Control\r\n                                                            autoFocus\r\n                                                            name=\"phone\"\r\n                                                            type=\"text\"\r\n                                                            value={phone}\r\n                                                            ref={register({ required: true })}\r\n                                                            onChange={(e) => setPhone(e.target.value)}\r\n                                                        />\r\n                                                        <span className=\"input_error\">{errors.phone && t('Phone is required') + '.'} </span>\r\n                                                    </Form.Group>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"form-group col-md-6\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                                                    <Form.Group size=\"lg\" controlId=\"email\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                                        <Form.Label>{t('Email')}</Form.Label>\r\n                                                        <Form.Control\r\n                                                            autoFocus\r\n                                                            name=\"email\"\r\n                                                            type=\"text\"\r\n                                                            value={email}\r\n                                                            ref={register({ required: true })}\r\n                                                            onChange={(e) => setEmail(e.target.value)}\r\n                                                        />\r\n                                                        <span className=\"input_error\">{errors.email && t('Email is required') + '.'} </span>\r\n                                                    </Form.Group>\r\n                                                </div>\r\n                                                <div className=\"form-group col-md-6\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                                                    <Form.Group size=\"lg\" controlId=\"subject\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                                        <Form.Label>{t('Subject')}</Form.Label>\r\n                                                        <Form.Control\r\n                                                            autoFocus\r\n                                                            name=\"subject\"\r\n                                                            type=\"text\"\r\n                                                            value={subject}\r\n                                                            ref={register({ required: true })}\r\n                                                            onChange={(e) => setSubject(e.target.value)}\r\n                                                        />\r\n                                                        <span className=\"input_error\">{errors.subject && t('Subject is required') + '.'} </span>\r\n                                                    </Form.Group>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"form-group col-12\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                        <Form.Label>{t('Message')}</Form.Label>\r\n                                                        <Form.Control as=\"textarea\" name=\"message\" placeholder=\"Message\" ref={register({ required: true })} value={message} onChange={(e) => setMessage(e.target.value)} rows={10} />\r\n                                                        <span className=\"input_error\">{errors.message && 'Message is required.'}</span>\r\n                                                    </Form.Group>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Button className=\"btn btn-warning btn-lg\" type=\"submit\" data-aos=\"fade-up\" data-aos-delay=\"300\">Send Message</Button>\r\n                                        </Form>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-md-4 contact-sidebar\" data-aos=\"fade-left\">\r\n                                        <h5>Contact us</h5>\r\n                                        <p>Need assistance? Our customer service is here to assist you Monday through Friday from 9 am EST to 10 pm EST.</p>\r\n                                        <p>56 Livingston Street,<br /> Brooklyn, NY 11201</p>\r\n                                        <div className=\"embed-responsive embed-responsive-1by1 contact-map\">\r\n                                            <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d12090.496282731767!2d-73.98517381282224!3d40.74829681924569!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89c259041366262b%3A0xfdac298467953648!2sMurray%20Hill%2C%20New%20York%2C%20NY%2C%20USA!5e0!3m2!1sen!2sin!4v1588137209658!5m2!1sen!2sin\" width=\"600\" height=\"450\" frameborder=\"0\" style={{ border: 0 }} allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n\r\n            <section className=\"edica-footer-banner-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"footer-banner\" data-aos=\"fade-up\">\r\n                        <h1 className=\"banner-title\">Download it now.</h1>\r\n                        <div className=\"banner-btns-wrapper\">\r\n                            <button className=\"btn btn-success\"> <img src=\"assets/images/apple@1x.svg\" alt=\"ios\" className=\"mr-2\" /> App Store</button>\r\n                            <button className=\"btn btn-success\"> <img src=\"assets/images/android@1x.svg\" alt=\"android\" className=\"mr-2\" /> Google Play</button>\r\n                        </div>\r\n                        <p className=\"banner-text\">Add some helper text here to explain the finer details of your <br /> product or service.</p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contact);","D:\\Project\\Blog\\blog-web\\src\\components\\Error.js",[],"D:\\Project\\Blog\\blog-web\\src\\components\\About.js",[],"D:\\Project\\Blog\\blog-web\\src\\components\\Home.js",["125","126","127","128","129","130","131","132","133","134"],"D:\\Project\\Blog\\blog-web\\src\\components\\SinglePost.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149"],"import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport apiUrl from \"../constants/apiPath\";\r\nimport Helper from \"../constants/helper\";\r\nimport Swal from 'sweetalert2';\r\nimport Moment from 'moment';\r\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000\r\n});\r\n\r\nconst SinglePost = (props) => {\r\n\r\n\r\n    const [error, setError] = React.useState();\r\n    const [isLoaded, setIsLoaded] = React.useState(true);\r\n    const [articleData, setarticleData] = React.useState([]);\r\n    const [relatedArticle, setrelatedArticle] = React.useState([]);\r\n    const [comment, setComment] = useState('');\r\n    const [activepage, setActivePage] = useState(1);\r\n    const [commentList, setCommentList] = useState([]);\r\n    const [commentCount, setCommentCount] = useState(0);\r\n    const [token, setToken] = useState(localStorage.getItem('isLogin') ? JSON.parse(localStorage.getItem('userData'))[1].accessToken : 0);\r\n    useEffect(() => {\r\n        setToken(localStorage.getItem('isLogin') ? JSON.parse(localStorage.getItem('userData'))[1].accessToken : 0);\r\n    }, [])\r\n\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSumbit = async e => {\r\n        if (localStorage.getItem('isLogin')) {\r\n            let jsonData = {\r\n                comment: comment, artical: articleData._id,\r\n            }\r\n            let path = apiUrl.addComment;\r\n            const fr = await Helper.post(jsonData, path, token);\r\n            const res = await fr.response.json();\r\n            if (fr.status === 200) {\r\n                if (res.status) {\r\n                    setComment('');\r\n                    getComment(articleData.id);\r\n                    Toast.fire({\r\n                        type: \"success\",\r\n                        title: res.message,\r\n                    })\r\n                } else {\r\n                    Toast.fire({\r\n                        type: \"error\",\r\n                        title: 'Please login first.',\r\n                        //title: res.message,\r\n                    });\r\n                }\r\n            } else {\r\n                Toast.fire({\r\n                    type: \"error\",\r\n                    title: res.message,\r\n                });\r\n            }\r\n            //props.history.push('/articlelisting');\r\n        } else {\r\n            Toast.fire({\r\n                type: \"error\",\r\n                title: \"Please login first.\",\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        var pathSlug = props.location.pathname.replace(\"/single-post/\", \"\");\r\n        if (props?.location?.state && props.location.state !== undefined) {\r\n            if (props?.location?.state?.slug && pathSlug == props.location.state.slug) {\r\n                var dataAr = Object.entries(props.location.state);\r\n                dataAr.forEach(([key, value]) => {\r\n                    dataAr[key] = value;\r\n                });\r\n                if (dataAr.length) {\r\n                    setarticleData(dataAr);\r\n                    getRelatedArticle(dataAr.category);\r\n                    viewCount(dataAr.id);\r\n                    getComment(dataAr.id);\r\n                    setIsLoaded(false);\r\n                } else {\r\n                    // 404 page\r\n                    props.history.push(\"/404\")\r\n                }\r\n\r\n            }\r\n        } else {\r\n            // 404 page\r\n            props.history.push(\"/404\")\r\n        }\r\n\r\n\r\n    }, [])\r\n\r\n    const getComment = async (artical_id) => {\r\n        let path = apiUrl.listComment + '?artical_id=' + `${artical_id}`;\r\n        const fr = await Helper.get(path, token);\r\n        const res = await fr.response.json();\r\n        if (fr.status === 200) {\r\n            if (res.status) {\r\n                console.log(res.data);\r\n                setCommentCount(res.data.length);\r\n                setCommentList(res.data);\r\n            } else {\r\n                Toast.fire({\r\n                    type: \"error\",\r\n                    title: res.message,\r\n                });\r\n            }\r\n        } else {\r\n            Toast.fire({\r\n                type: \"error\",\r\n                title: res.message,\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    const getRelatedArticle = async (category) => {\r\n        let path = apiUrl.getRelatedArticle + '?category=' + `${category}`;\r\n        const fr = await Helper.get(path);\r\n        const res = await fr.response.json();\r\n        if (res.status) {\r\n            setrelatedArticle(res.data);\r\n        } else {\r\n            Toast.fire({\r\n                type: \"error\",\r\n                title: res.msg,\r\n            });\r\n        }\r\n    }\r\n    const viewCount = async (id) => {\r\n        let path = apiUrl.viewCount + '?id=' + `${id}`;\r\n        const fr = await Helper.get(path);\r\n        const res = await fr.response.json();\r\n        if (res.status) {\r\n            //\r\n        } else {\r\n            Toast.fire({\r\n                type: \"error\",\r\n                title: res.message,\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleClick(url) {\r\n        window.location.href = url;\r\n        window.scrollTo(0, 0);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {isLoaded && <div className=\"edica-loader\"></div>}\r\n            <main className=\"blog-post\">\r\n                <div className=\"container\">\r\n                    <h3 className=\"edica-page-title\" data-aos=\"fade-up\">{articleData.title}</h3>\r\n                    <p className=\"edica-blog-post-meta\" data-aos=\"fade-up\" data-aos-delay=\"200\">Written by Richard Searls • {Moment(articleData.created_at).format('DD MMMM YYYY')} • {commentCount} Comments</p>\r\n                    <section className=\"blog-post-featured-img\" data-aos=\"fade-up\" data-aos-delay=\"300\">\r\n\r\n                        <img src={process.env.REACT_APP_API_BASE_URL + articleData.img} alt=\"featur\" className=\"w-100\" />\r\n                    </section>\r\n                    <section className=\"post-content\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-9 mx-auto\" data-aos=\"fade-up\">\r\n                                <p>{ReactHtmlParser(articleData.content)}</p>\r\n                            </div>\r\n                        </div>\r\n                        {/* <div className=\"row\">\r\n                            <div className=\"col-lg-9 mx-auto\">\r\n                                <p data-aos=\"fade-up\"><a href=\"#\">Lorem ipsum, or lipsum as it is sometimes known,</a> is dummy text used in laying out printed graphic or web designs. The passage is at attributed to an unknown typesetters in 1the 5th century who is thought scrambled with all parts of Cicero’s De. Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out printed graphic or web designs</p>\r\n                                <h2 className=\"mb-4\" data-aos=\"fade-up\">Blog single page</h2>\r\n                                <ul data-aos=\"fade-up\">\r\n                                    <li>What manner of thing was upon me I did not know, but that it was large and heavy and many-legged I could feel.</li>\r\n                                    <li>My hands were at its throat before the fangs had a chance to bury themselves in my neck, and slowly</li>\r\n                                    <li>I forced the hairy face from me and closed my fingers, vise-like, upon its windpipe.</li>\r\n                                </ul>\r\n\r\n                                <blockquote data-aos=\"fade-up\">\r\n                                    <p>You are safe here! I shouted above the sudden noise. She looked away from me downhill. The people were coming out of their houses, astonished.</p>\r\n                                    <footer className=\"blockquote-footer\">Oluchi Mazi</footer>\r\n                                </blockquote>\r\n                                <p>Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out printed graphic or web designs. The passage is at attributed to an unknown typesetters in 1the 5th century who is thought scrambled with all parts of Cicero’s De. Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in laying out printed graphic or web designs</p>\r\n                            </div>\r\n                        </div> */}\r\n                    </section>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-9 mx-auto\">\r\n                            <section className=\"related-posts\">\r\n                                <h2 className=\"section-title mb-4\" data-aos=\"fade-up\">Related Posts</h2>\r\n                                <div className=\"row\">\r\n                                    {relatedArticle.map((item, key) => {\r\n                                        return (\r\n                                            <div className=\"col-md-4\" data-aos=\"fade-right\" data-aos-delay=\"100\" key={key}>\r\n\r\n                                                <Link className=\"blog-post-permalink\" onClick={() => handleClick(\"/single-post/\" + item.slug)} to={{ pathname: \"/single-post/\" + item.slug, state: item }}>\r\n                                                    <img src={process.env.REACT_APP_API_BASE_URL + item.img} alt=\"blog post\" className=\"post-thumbnail\" />\r\n                                                    {/* <p className=\"post-category\">Blog post</p> */}\r\n                                                    <h5 className=\"post-title\">{item.title}</h5>\r\n                                                </Link>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n\r\n                                </div>\r\n                            </section>\r\n                            <hr />\r\n                            <section className=\"comment-section\">\r\n                                <div className=\"headings justify-content-between align-items-center mb-3\">\r\n                                    <h2>Comments</h2>\r\n                                    {commentList.map((item, key) => {\r\n                                        console.log(item.user)\r\n                                        return (\r\n                                            <div className=\"card p-3 \" data-aos=\"fade-up\">\r\n                                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                    <div className=\"user d-flex flex-row align-items-center\">\r\n                                                        <img src={process.env.REACT_APP_API_BASE_URL + item.user.image} width=\"50\" className=\"user-img comment_user rounded-circle mr-2\" />\r\n                                                        <span>\r\n                                                            <small class=\"font-weight-bold text-primary\">{item.user.name}</small><br />\r\n                                                            <small class=\"font-weight-bold\">{item.comment}</small>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                    <small>{Moment(item.created_at).fromNow()}</small>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })}\r\n                                </div>\r\n                                <h2 className=\"section-title mb-5\" data-aos=\"fade-up\">Leave a Reply</h2>\r\n                                <Form onSubmit={handleSubmit(onSumbit)}>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"form-group col-12\" data-aos=\"fade-up\">\r\n                                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control as=\"textarea\" name=\"comment\" placeholder=\"Comment\" ref={register({ required: true })} value={comment} onChange={(e) => setComment(e.target.value)} rows={10} />\r\n                                                <span className=\"input_error\">{errors.comment && 'Comment is required.'}</span>\r\n                                            </Form.Group>\r\n                                            <Button className=\"btn btn-warning\" type=\"submit\" >Submit</Button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </Form>\r\n\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nexport default SinglePost;","D:\\Project\\Blog\\blog-web\\src\\components\\elements\\Footer.js",["150"],"import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { saveAuthData } from '../../Services/actions/authAction';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    saveAuthData: data => dispatch(saveAuthData(data)),\r\n});\r\n\r\nconst Footer = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n    const handalLng = (lng) => {\r\n        props.saveAuthData({ lng: lng });\r\n        i18n.changeLanguage(lng);\r\n    }\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <footer className=\"edica-footer\" data-aos=\"fade-up\">\r\n                <div className=\"container\">\r\n                    <div className=\"row footer-widget-area\">\r\n                        <div className=\"col-md-3\">\r\n                            <a href=\"index.html\" className=\"footer-brand-wrapper\">\r\n                                <img src=\"/assets/images/logo.svg\" alt=\"edica logo\" />\r\n                            </a>\r\n                            <p className=\"contact-details\">hello@edica.com</p>\r\n                            <p className=\"contact-details\">+23 3000 000 00</p>\r\n                            <nav className=\"footer-social-links\">\r\n                                <a href=\"#!\"><i className=\"fab fa-facebook-f\"></i></a>\r\n                                <a href=\"#!\"><i className=\"fab fa-twitter\"></i></a>\r\n                                <a href=\"#!\"><i className=\"fab fa-behance\"></i></a>\r\n                                <a href=\"#!\"><i className=\"fab fa-dribbble\"></i></a>\r\n                            </nav>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <nav className=\"footer-nav\">\r\n                                <a href=\"#!\" className=\"nav-link\">Company</a>\r\n                                <a href=\"#!\" className=\"nav-link\">Android App</a>\r\n                                <a href=\"#!\" className=\"nav-link\">ios App</a>\r\n                                <a href=\"#!\" className=\"nav-link\">Blog</a>\r\n                                <a href=\"#!\" className=\"nav-link\">Partners</a>\r\n                                <a href=\"#!\" className=\"nav-link\">Careers</a>\r\n                            </nav>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <nav className=\"footer-nav\">\r\n                                <a href=\"#!\" className=\"nav-link\">FAQ</a>\r\n                                <a href=\"#!\" className=\"nav-link\">Reporting</a>\r\n                                <a href=\"#!\" className=\"nav-link\">Block Storage</a>\r\n                                <a href=\"#!\" className=\"nav-link\">Tools & Integrations</a>\r\n                                <a href=\"#!\" className=\"nav-link\">API</a>\r\n                                <a href=\"#!\" className=\"nav-link\">Pricing</a>\r\n                            </nav>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <Form.Control className='form-control lngSelect' as=\"select\" size=\"ms\" onChange={(e) => { handalLng(e.target.value); }} value={props.data.authData.lng}>\r\n                                <option value=\"en\">English</option>\r\n                                <option value=\"hi\">हिंदी</option>\r\n                            </Form.Control>\r\n                            {/* <div className=\"dropdown footer-country-dropdown\">\r\n                                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"footerCountryDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    <span className=\"flag-icon flag-icon-gb flag-icon-squared\"></span> United Kingdom <i className=\"fas fa-chevron-down ml-2\"></i>\r\n                                </button>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"footerCountryDropdown\">\r\n                                    <button className=\"dropdown-item \" href=\"#\" onClick={() => { handalLng('en'); }}>\r\n                                        <span className=\"flag-icon flag-icon-us flag-icon-squared\"></span> English\r\n                                     </button>\r\n                                    <button className=\"dropdown-item active\" href=\"#\" onClick={() => { handalLng('hi'); }}>\r\n                                        <span className=\"flag-icon flag-icon-au flag-icon-squared\"></span> हिंदी\r\n                                    </button>\r\n                                </div>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"footer-bottom-content\">\r\n                        <nav className=\"nav footer-bottom-nav\">\r\n                            <a href=\"#!\">Privacy & Policy</a>\r\n                            <a href=\"#!\">Terms</a>\r\n                            <a href=\"#!\">Site Map</a>\r\n                        </nav>\r\n                        <p className=\"mb-0\">© Edica. 2020 <a href=\"https://www.bootstrapdash.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-reset\">bootstrapdash</a> . All rights reserved.</p>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer);","D:\\Project\\Blog\\blog-web\\src\\components\\elements\\Header.js",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport LoginModel from './LoginModel';\r\nimport SignupModel from './SignupModel';\r\nimport ForgotModel from './ForgotModel';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { saveAuthData } from '../../Services/actions/authAction';\r\nimport { loginShow, signUpShow, forgotShow } from '../../Services/actions/modelAction';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    saveAuthData: data => dispatch(saveAuthData(data)),\r\n    loginShow: data => dispatch(loginShow(data)),\r\n    signUpShow: data => dispatch(signUpShow(data)),\r\n    forgotShow: data => dispatch(forgotShow(data))\r\n});\r\n\r\n\r\nconst Header = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n    //const [token] = useState(JSON.parse(localStorage.getItem('userData'))[1].accessToken);\r\n    // useEffect(() => {\r\n    //     setIsLogin(props.data.authData.setIsLogin);\r\n    // }, [])\r\n    // const logout = () => {\r\n    //     localStorage.removeItem(\"isLogin\");\r\n    //     localStorage.removeItem('userData');\r\n    //     let authDataSet = {\r\n    //         setIsLogin: false\r\n    //     }\r\n    //     props.saveAuthData(authDataSet);\r\n    // };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"header\">\r\n                <header className=\"edica-header\">\r\n                    <div className=\"container\">\r\n                        <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                            <Link className=\"navbar-brand\" activeClassName=\"activemenu\" to=\"/\"><img src=\"/assets/images/logo.svg\" alt=\"Edica\" /></Link>\r\n                            <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#edicaMainNav\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                                <span className=\"navbar-toggler-icon\"></span>\r\n                            </button>\r\n                            <div className=\"collapse navbar-collapse\" id=\"edicaMainNav\">\r\n                                <ul className=\"navbar-nav mx-auto mt-2 mt-lg-0\">\r\n                                    <li className=\"nav-item active\">\r\n                                        <Link className=\"nav-link\" activeClassName=\"activemenu\" to=\"/\">{t('Home')}<span className=\"sr-only\">(current)</span></Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" activeClassName=\"activemenu\" to=\"/about-us\">{t('About Us')}</Link>\r\n                                    </li>\r\n                                    <li className=\"nav-item\">\r\n                                        <Link className=\"nav-link\" activeClassName=\"activemenu\" to=\"/contact-us\">{t('Contact Us')}</Link>\r\n                                    </li>\r\n\r\n                                </ul>\r\n                                <ul className=\"navbar-nav mt-2 mt-lg-0 mx-auto\">\r\n                                    {props.data.authData.setIsLogin && props.data.authData.setIsLogin == true ?\r\n                                        <li className=\"nav-item dropdown \"> <a class=\"nav-link dropdown-toggle\" href=\"javascript:void(0);\" id=\"blogDropdown\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><img src={process.env.REACT_APP_API_BASE_URL + JSON.parse(localStorage.getItem('userData'))[0].image} width=\"50\" className=\"profile_header rounded-circle mr-2\" /> {JSON.parse(localStorage.getItem('userData'))[0].name} </a>\r\n                                            <div class=\"dropdown-menu\" aria-labelledby=\"blogDropdown\">\r\n                                                <Link className=\"dropdown-item\" to=\"/profile\">Profile</Link>\r\n                                                <a class=\"dropdown-item\" href=\"javascript:void(0);\" onClick={() => {\r\n                                                    props.saveAuthData({ setIsLogin: false });\r\n                                                }}>Logout</a>\r\n                                            </div>\r\n                                        </li>\r\n                                        : <a class=\"nav-link\" href=\"javascript:void(0);\" onClick={() => {\r\n                                            props.loginShow(true);\r\n                                        }}>{t('Login')}</a>\r\n\r\n                                    }\r\n\r\n                                </ul>\r\n                            </div>\r\n                        </nav>\r\n                    </div>\r\n                </header>\r\n\r\n\r\n                <div className=\"modal fade comment-section\" id=\"loginmodel\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"signupmodelLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\" role=\"document\">\r\n                        <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                                <h5 class=\"modal-title\" id=\"exampleModalLabel\">User Login</h5>\r\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n                                <div class=\"col-lg-12 mx-auto\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12 contact-form-wrapper\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"form-group col-md-12\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                                                    <label for=\"email\">EMAIL</label>\r\n                                                    <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Email address\" />\r\n                                                </div>\r\n                                                <div class=\"form-group col-md-12\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                                                    <label for=\"subject\">Password</label>\r\n                                                    <input type=\"text\" class=\"form-control\" id=\"password\" name=\"subject\" placeholder=\"Password\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"form-group col-12 privacy_policy_div\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                                    <input type=\"checkbox\" class=\"form-control privacy_policy\" id=\"subject\" name=\"subject\" placeholder=\"Subject\" />\r\n                                                    <label className=\"privacy_policy_text\" for=\"message\"> I accept the Terms of Use & Privacy Policy</label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"submit\" class=\"btn btn-warning btn-block\" data-aos=\"fade-up\" data-aos-delay=\"300\">Login</button>\r\n                                Looking to <a href=\"#\"  >create an account</a> ?\r\n                                {/* <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"button\" class=\"btn btn-primary\">Save changes</button> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal fade comment-section\" id=\"signupmodel\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"signupmodelLabel\" aria-hidden=\"true\">\r\n                    <div class=\"modal-dialog\" role=\"document\">\r\n                        <div class=\"modal-content\">\r\n                            <div class=\"modal-header\">\r\n                                <h5 class=\"modal-title\" id=\"exampleModalLabel\">User SignUp</h5>\r\n                                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n                                <div class=\"col-lg-12 mx-auto\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12 contact-form-wrapper\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"form-group col-md-12\" data-aos=\"fade-up\">\r\n                                                    <label for=\"name\">NAME</label>\r\n                                                    <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" placeholder=\"Your full name\" />\r\n                                                </div>\r\n                                                <div class=\"form-group col-md-12\" data-aos=\"fade-up\">\r\n                                                    <label for=\"phone\">PHONE</label>\r\n                                                    <input type=\"text\" class=\"form-control\" id=\"phone\" name=\"phone\" placeholder=\"Phone\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"form-group col-md-12\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                                                    <label for=\"email\">EMAIL</label>\r\n                                                    <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Email address\" />\r\n                                                </div>\r\n                                                <div class=\"form-group col-md-12\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                                                    <label for=\"subject\">Password</label>\r\n                                                    <input type=\"text\" class=\"form-control\" id=\"password\" name=\"subject\" placeholder=\"Password\" />\r\n                                                </div>\r\n                                                <div class=\"form-group col-md-12\" data-aos=\"fade-up\" data-aos-delay=\"100\">\r\n                                                    <label for=\"subject\">Confirm Password</label>\r\n                                                    <input type=\"text\" class=\"form-control\" id=\"Confirm password\" name=\"subject\" placeholder=\"Confirm Password\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"form-group col-12 privacy_policy_div\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                                    <input type=\"checkbox\" class=\"form-control privacy_policy\" id=\"subject\" name=\"subject\" placeholder=\"Subject\" />\r\n                                                    <label className=\"privacy_policy_text\" for=\"message\"> I accept the Terms of Use & Privacy Policy</label>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"modal-footer\">\r\n                                <button type=\"submit\" class=\"btn btn-warning btn-block\" data-aos=\"fade-up\" data-aos-delay=\"300\">Register Now</button>\r\n                                {/* <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button type=\"button\" class=\"btn btn-primary\">Save changes</button> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            { props.data.modelData.loginModelShow && (<LoginModel />)}\r\n            { props.data.modelData.signUpModelShow && (<SignupModel />)}\r\n            { props.data.modelData.forgotModelShow && (<ForgotModel />)}\r\n\r\n\r\n        </React.Fragment >\r\n    )\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","D:\\Project\\Blog\\blog-web\\src\\constants\\apiPath.js",[],"D:\\Project\\Blog\\blog-web\\src\\constants\\helper.js",[],"D:\\Project\\Blog\\blog-web\\src\\components\\elements\\loginModel.js",["166","167","168","169","170"],"D:\\Project\\Blog\\blog-web\\src\\components\\elements\\LoginModel.js",["171","172","173","174","175","176"],"import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Button, Spinner } from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport apiUrl from \"../../constants/apiPath\"\r\nimport Helper from \"../../constants/helper\";\r\nimport Swal from 'sweetalert2';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { saveAuthData } from '../../Services/actions/authAction';\r\nimport { loginShow, signUpShow, forgotShow } from '../../Services/actions/modelAction';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    saveAuthData: data => dispatch(saveAuthData(data)),\r\n    loginShow: data => dispatch(loginShow(data)),\r\n    signUpShow: data => dispatch(signUpShow(data)),\r\n    forgotShow: data => dispatch(forgotShow(data))\r\n});\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000\r\n});\r\nconst LoginModel = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    // useEffect(() => {\r\n    //     setModalShowLogin(props.show);\r\n    // }, [props.show])\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSumbit = async e => {\r\n        let jsonData = {\r\n            email: email, password: password\r\n        }\r\n        let path = apiUrl.login;\r\n        const fr = await Helper.post(jsonData, path);\r\n        const res = await fr.response.json();\r\n        if (fr.status === 200) {\r\n            if (res.status) {\r\n                setEmail(\"\");\r\n                setPassword(\"\");\r\n                Toast.fire({\r\n                    type: \"success\",\r\n                    title: res.message,\r\n                })\r\n\r\n                //localStorage.setItem('userData', JSON.stringify(res.data));\r\n                let authDataSet = {\r\n                    setIsLogin: true,\r\n                    userData: res.data\r\n                }\r\n                props.saveAuthData(authDataSet);\r\n                props.loginShow(false)\r\n            } else {\r\n                Toast.fire({\r\n                    type: \"error\",\r\n                    title: res.message,\r\n                });\r\n            }\r\n        } else {\r\n            Toast.fire({\r\n                type: \"error\",\r\n                title: res.message,\r\n            });\r\n        }\r\n        //props.history.push('/articlelisting');\r\n    }\r\n    return (\r\n        <>\r\n            <Modal\r\n                {...props}\r\n                size=\"sx\"\r\n                className=\"mentor_modal\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                show={props.data.modelData.loginModelShow}\r\n                onHide={() => props.loginShow(false)}\r\n            >\r\n                <Form onSubmit={handleSubmit(onSumbit)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{t('Login')}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"Login\">\r\n\r\n                            <Form.Group size=\"lg\" controlId=\"email\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                <Form.Label>{t('Email')}</Form.Label>\r\n                                <Form.Control\r\n                                    autoFocus\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    ref={register({ required: true })}\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                                <span className=\"input_error\">{errors.email && t('Email is required') + '.'}</span>\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"password\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                <Form.Label>{t('Password')}</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    ref={register({ required: true })}\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                                <span className=\"input_error\">{errors.password && t('Password is required') + '.'}</span>\r\n                            </Form.Group>\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-12 privacy_policy_div\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                    <input type=\"checkbox\" class=\"form-control privacy_policy\" ref={register({ required: true })} id=\"i_accept\" name=\"i_accept\" placeholder=\"Subject\" />\r\n                                    <label className=\"privacy_policy_text\" for=\"message\">{t('I accept the Terms of Use & Privacy Policy')}</label>\r\n                                </div>\r\n                                <span className=\"input_error\">{errors.i_accept && t('I accept the Terms of Use & Privacy Policy') + '.'}</span>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer >\r\n                        <Button className=\"btn btn-warning btn-block\" size=\"lg\" type=\"submit\">\r\n                            {t('Login')}\r\n                            {/* <Spinner\r\n                                as=\"span\"\r\n                                animation=\"border\"\r\n                                size=\"sm\"\r\n                                role=\"status\"\r\n                                aria-hidden=\"true\"\r\n                            />\r\n                            <span className=\"sr-only\">Loading...</span> */}\r\n                        </Button>\r\n                        <div> <a href=\"#\" onClick={() => props.forgotShow(true)}  >{t('Forgot Password')}</a> ? </div>\r\n                        <div> {t('Looking to')} <a href=\"#\" onClick={() => props.signUpShow(true)}  >{t('create an account')}</a> ? </div>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginModel);\r\n","D:\\Project\\Blog\\blog-web\\src\\components\\elements\\SignupModel.js",["177","178","179"],"import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport apiUrl from \"../../constants/apiPath\"\r\nimport Helper from \"../../constants/helper\";\r\nimport Swal from 'sweetalert2';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { saveAuthData } from '../../Services/actions/authAction';\r\nimport { loginShow, signUpShow, forgotShow } from '../../Services/actions/modelAction';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    saveAuthData: data => dispatch(saveAuthData(data)),\r\n    loginShow: data => dispatch(loginShow(data)),\r\n    signUpShow: data => dispatch(signUpShow(data)),\r\n    forgotShow: data => dispatch(forgotShow(data))\r\n});\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000\r\n});\r\nconst SignupModel = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setconfirmPassword] = useState(\"\");\r\n\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n\r\n    const onSumbit = async e => {\r\n        let jsonData = {\r\n            name: name, email: email, password: password\r\n        }\r\n        let path = apiUrl.register;\r\n        const fr = await Helper.post(jsonData, path);\r\n        const res = await fr.response.json();\r\n        console.log(res);\r\n        if (fr.status === 200) {\r\n            if (res.status) {\r\n                setName(\"\");\r\n                setEmail(\"\");\r\n                setPassword(\"\");\r\n                setconfirmPassword(\"\");\r\n                Toast.fire({\r\n                    type: \"success\",\r\n                    title: res.message,\r\n                })\r\n\r\n            } else {\r\n                Toast.fire({\r\n                    type: \"error\",\r\n                    title: res.message,\r\n                });\r\n            }\r\n        } else {\r\n            Toast.fire({\r\n                type: \"error\",\r\n                title: res.message,\r\n            });\r\n        }\r\n        //props.history.push('/articlelisting');\r\n    }\r\n    return (\r\n        <>\r\n            <Modal\r\n                {...props}\r\n                show={props.data.modelData.signUpModelShow}\r\n                onHide={() => props.signUpShow(false)}\r\n                size=\"sx\"\r\n                className=\"mentor_modal\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Form onSubmit={handleSubmit(onSumbit)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{t('SignUp')}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"Login\">\r\n\r\n                            <Form.Group size=\"lg\" controlId=\"name\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                <Form.Label>{t('Name')}</Form.Label>\r\n                                <Form.Control\r\n                                    autoFocus\r\n                                    name=\"name\"\r\n                                    type=\"text\"\r\n                                    value={name}\r\n                                    ref={register({ required: true })}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                />\r\n                                <span className=\"input_error\">{errors.name && t('Name is required') + '.'} </span>\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"email\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                <Form.Label>{t('Email')}</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    ref={register({ required: true })}\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                                <span className=\"input_error\">{errors.email && t('Email is required') + '.'}</span>\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"password\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                <Form.Label>{t('Password')}</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    ref={register({ required: true })}\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                                <span className=\"input_error\">{errors.password && t('Password is required') + '.'}</span>\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"confirmpassword\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                <Form.Label>{t('Confirm Password')}</Form.Label>\r\n                                <Form.Control\r\n                                    name=\"confirmPassword\"\r\n                                    type=\"password\"\r\n                                    ref={register({ required: true })}\r\n                                    value={confirmPassword}\r\n                                    onChange={(e) => setconfirmPassword(e.target.value)}\r\n                                />\r\n                                <span className=\"input_error\">{errors.confirmPassword && t('Confirm password is required') + '.'}</span>\r\n                            </Form.Group>\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-12 privacy_policy_div\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                    <input type=\"checkbox\" class=\"form-control privacy_policy\" ref={register({ required: true })} id=\"i_accept\" name=\"i_accept\" placeholder=\"Subject\" />\r\n                                    <label className=\"privacy_policy_text\" for=\"message\">{t('I accept the Terms of Use & Privacy Policy')}</label><br />\r\n\r\n                                </div>\r\n                                <span className=\"input_error\">{errors.i_accept && t('I accept the Terms of Use & Privacy Policy') + '.'}</span>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer >\r\n                        <Button className=\"btn btn-warning btn-block\" size=\"lg\" type=\"submit\" >{t('Login')}</Button>\r\n                        {t('Back to')} <a href=\"#\" onClick={() => { props.loginShow(true); }}  > {t('Login')} </a> ?\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupModel);\r\n","D:\\Project\\Blog\\blog-web\\src\\components\\elements\\ForgotModel.js",["180","181","182","183"],"import React, { useState } from \"react\";\r\nimport { Modal, Button, Row, Col, } from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { saveAuthData } from '../../Services/actions/authAction';\r\nimport { loginShow, signUpShow, forgotShow } from '../../Services/actions/modelAction';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    saveAuthData: data => dispatch(saveAuthData(data)),\r\n    loginShow: data => dispatch(loginShow(data)),\r\n    signUpShow: data => dispatch(signUpShow(data)),\r\n    forgotShow: data => dispatch(forgotShow(data))\r\n});\r\n\r\nconst ForgotModel = (props) => {\r\n    const { t, i18n } = useTranslation();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function validateForm() {\r\n        return email.length > 0 && password.length > 0;\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n    }\r\n    return (\r\n        <>\r\n            <Modal\r\n                {...props}\r\n                show={props.data.modelData.forgotModelShow}\r\n                onHide={() => props.forgotShow(false)}\r\n                size=\"sx\"\r\n                className=\"mentor_modal\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{t('Forgot Password')}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"Login\">\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group size=\"lg\" controlId=\"email\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                <Form.Label>{t('User SignUp')}</Form.Label>\r\n                                <Form.Control\r\n                                    autoFocus\r\n                                    type=\"email\"\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group size=\"lg\" controlId=\"password\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                <Form.Label>{t('Password')}</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    value={password}\r\n                                    onChange={(e) => setPassword(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                            <div class=\"row\">\r\n                                <div class=\"form-group col-12 privacy_policy_div\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                    <input type=\"checkbox\" class=\"form-control privacy_policy\" id=\"subject\" name=\"subject\" placeholder=\"Subject\" />\r\n                                    <label className=\"privacy_policy_text\" for=\"message\">{t('I accept the Terms of Use & Privacy Policy')} </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer >\r\n                    <Button className=\"btn btn-warning btn-block\" size=\"lg\" type=\"submit\" disabled={!validateForm()}>{t('Login')}</Button>\r\n                    {t('Back to')} <a href=\"#\" onClick={() => { props.loginShow(true) }}  >{t('Login')}</a> ?\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotModel);\r\n","D:\\Project\\Blog\\blog-web\\src\\components\\Profile.js",["184","185","186","187","188","189","190","191","192"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport apiUrl from \"../constants/apiPath\"\r\nimport Helper from \"../constants/helper\";\r\nimport Swal from 'sweetalert2';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { saveAuthData } from '../Services/actions/authAction';\r\nimport { loginShow, signUpShow, forgotShow } from '../Services/actions/modelAction';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    data: state\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    // saveAuthData: data => dispatch(saveAuthData(data))\r\n});\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000\r\n});\r\nconst Profile = (props) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [countrycode, setCountryCode] = useState(\"\");\r\n    const [mobile, setMobile] = useState(\"\");\r\n    const [userprofile, setUserprofile] = useState('');\r\n    const [token, setToken] = useState(false);\r\n    const [userData, setUserData] = useState('');\r\n    const [profileImgShow, setProfileImgShow] = useState('');\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    if (!props.data.authData.setIsLogin) {\r\n        props.history.push('/');\r\n    }\r\n    useEffect(() => {\r\n        if (props.data.authData.setIsLogin) {\r\n            setToken(props.data.authData.setIsLogin ? JSON.parse(localStorage.getItem('userData'))[1].accessToken : 0);\r\n            setUserData(JSON.parse(localStorage.getItem('userData'))[0]);\r\n            setName(JSON.parse(localStorage.getItem('userData'))[0].name);\r\n            setEmail(JSON.parse(localStorage.getItem('userData'))[0].email);\r\n            setCountryCode(JSON.parse(localStorage.getItem('userData'))[0].country_code);\r\n            setMobile(JSON.parse(localStorage.getItem('userData'))[0].mobile);\r\n            // setUserprofile(JSON.parse(localStorage.getItem('userData'))[0].image);\r\n            setProfileImgShow(JSON.parse(localStorage.getItem('userData'))[0].image);\r\n        } else {\r\n            props.history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    const onSumbit = async e => {\r\n        let formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('img', userprofile);\r\n        formData.append('country_code', countrycode);\r\n        formData.append('mobile', mobile);\r\n        let path = apiUrl.profileUpdate;\r\n        const fr = await Helper.formPost(formData, path, token);\r\n        const res = await fr.response.json();\r\n        if (fr.status === 200) {\r\n            if (res.status) {\r\n                Toast.fire({\r\n                    type: \"success\",\r\n                    title: res.message,\r\n                })\r\n                props.history.push('/');\r\n            } else {\r\n                Toast.fire({\r\n                    type: \"error\",\r\n                    title: res.message,\r\n                });\r\n            }\r\n        } else {\r\n            Toast.fire({\r\n                type: \"error\",\r\n                title: res.message,\r\n            });\r\n        }\r\n    }\r\n    const handleSelectedFile = e => {\r\n        setUserprofile(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div classNam=\"edica-loader\"></div>\r\n            <main>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-11 mx-auto\">\r\n\r\n                            <section className=\"edica-contact py-5 mb-5\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-12 contact-form-wrapper\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"form-group col-md-12 profile_img_align\" data-aos=\"fade-up\" >\r\n                                                <img src={process.env.REACT_APP_API_BASE_URL + profileImgShow} width=\"50\" className=\"profile_page rounded-circle mr-2\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <Form onSubmit={handleSubmit(onSumbit)}>\r\n\r\n\r\n                                            <div class=\"row\">\r\n                                                <div class=\"form-group col-md-6\" data-aos=\"fade-up\">\r\n                                                    <Form.Group size=\"lg\" controlId=\"name\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                                        <Form.Label>Name</Form.Label>\r\n                                                        <Form.Control\r\n                                                            autoFocus\r\n                                                            name=\"name\"\r\n                                                            type=\"text\"\r\n                                                            ref={register({ required: true })}\r\n                                                            value={name}\r\n                                                            onChange={(e) => setName(e.target.value)}\r\n                                                        />\r\n                                                        <span className=\"input_error\">{errors.name && 'Email is required.'}</span>\r\n                                                    </Form.Group>\r\n\r\n                                                </div>\r\n                                                <div class=\"form-group col-md-6\" data-aos=\"fade-up\">\r\n                                                    <Form.Group size=\"lg\" controlId=\"email\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                                        <Form.Label>Email</Form.Label>\r\n                                                        <Form.Control\r\n                                                            autoFocus\r\n                                                            name=\"email\"\r\n                                                            type=\"email\"\r\n                                                            ref={register({ required: true })}\r\n                                                            value={email}\r\n                                                            onChange={(e) => setEmail(e.target.value)}\r\n                                                            disabled\r\n                                                        />\r\n                                                        <span className=\"input_error\">{errors.email && 'Email is required.'}</span>\r\n                                                    </Form.Group>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"form-group col-md-6\" data-aos=\"fade-up\">\r\n                                                    <Form.Group size=\"lg\" controlId=\"countrycode\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                                        <Form.Label>Country Code</Form.Label>\r\n                                                        <Form.Control\r\n                                                            autoFocus\r\n                                                            name=\"countrycode\"\r\n                                                            type=\"number\"\r\n                                                            ref={register({ required: true })}\r\n                                                            value={countrycode}\r\n                                                            onChange={(e) => setCountryCode(e.target.value)}\r\n                                                        />\r\n                                                        <span className=\"input_error\">{errors.countrycode && 'Country Code is required.'}</span>\r\n                                                    </Form.Group>\r\n\r\n                                                </div>\r\n                                                <div class=\"form-group col-md-6\" data-aos=\"fade-up\">\r\n                                                    <Form.Group size=\"lg\" controlId=\"mobile\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                                        <Form.Label>Mobile Number</Form.Label>\r\n                                                        <Form.Control\r\n                                                            autoFocus\r\n                                                            name=\"mobile\"\r\n                                                            type=\"text\"\r\n                                                            ref={register({ required: true })}\r\n                                                            value={mobile}\r\n                                                            onChange={(e) => setMobile(e.target.value)}\r\n\r\n                                                        />\r\n                                                        <span className=\"input_error\">{errors.mobile && 'Mobile is required.'}</span>\r\n                                                    </Form.Group>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"row\">\r\n                                                <div class=\"form-group col-md-6\" data-aos=\"fade-up\">\r\n                                                    <Form.Group size=\"lg\" controlId=\"userprofile\" data-aos=\"fade-up\" data-aos-delay=\"200\">\r\n                                                        <Form.Label>User Profile</Form.Label>\r\n                                                        <Form.Control\r\n                                                            onChange={handleSelectedFile}\r\n                                                            name=\"img\"\r\n                                                            type=\"file\"\r\n                                                            id=\"img\"\r\n                                                            accept=\"image/*\"\r\n                                                        //value={userprofile}\r\n                                                        // validators={['isFile', 'maxFileSize:' + 1 * 1024 * 1024,]}\r\n                                                        // errorMessages={['File is not valid', 'Size must not exceed 1MB']}\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <Button className=\"btn btn-warning btn-block\" size=\"lg\" type=\"submit\" >Update</Button>\r\n                                        </Form>\r\n                                    </div>\r\n                                </div>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n\r\n            <section className=\"edica-footer-banner-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"footer-banner\" data-aos=\"fade-up\">\r\n                        <h1 className=\"banner-title\">Download it now.</h1>\r\n                        <div className=\"banner-btns-wrapper\">\r\n                            <button className=\"btn btn-success\"> <img src=\"assets/images/apple@1x.svg\" alt=\"ios\" className=\"mr-2\" /> App Store</button>\r\n                            <button className=\"btn btn-success\"> <img src=\"assets/images/android@1x.svg\" alt=\"android\" className=\"mr-2\" /> Google Play</button>\r\n                        </div>\r\n                        <p className=\"banner-text\">Add some helper text here to explain the finer details of your <br /> product or service.</p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","D:\\Project\\Blog\\blog-web\\src\\containers\\AuthContainer.js",[],["193","194"],"D:\\Project\\Blog\\blog-web\\src\\Services\\constants.js",["195"],"export default {\r\n    SaveAuthData: 'SaveAuthData',\r\n    LoginShow: 'LoginShow',\r\n    SignUpShow: 'SignUpShow',\r\n    ForgotShow: 'ForgotShow'\r\n};\r\n","D:\\Project\\Blog\\blog-web\\src\\Services\\reducers\\index.js",[],"D:\\Project\\Blog\\blog-web\\src\\Services\\actions\\authAction.js",[],"D:\\Project\\Blog\\blog-web\\src\\Services\\reducers\\authReducer.js",[],"D:\\Project\\Blog\\blog-web\\src\\Services\\reducers\\modelReducer.js",["196","197","198"],"import constant from '../constants';\r\nconst initialState = {\r\n    loginModelShow: false,\r\n    signUpModelShow: false,\r\n    forgotModelShow: false\r\n}\r\nexport default function modelData(state = initialState, action) {\r\n    console.log(\"Model Data Reducer\", action.data);\r\n    console.log(\"Type\", constant.LoginShow);\r\n    switch (action.type) {\r\n        case constant.LoginShow:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n\r\n            }\r\n            break;\r\n        case constant.SignUpShow:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n\r\n            }\r\n            break;\r\n        case constant.ForgotShow:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n\r\n            }\r\n            break;\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","D:\\Project\\Blog\\blog-web\\src\\Services\\actions\\modelAction.js",[],"D:\\Project\\Blog\\blog-web\\src\\layout\\defaultLayout.js",["199"],"import React, { Component } from \"react\";\r\nimport Header from \"../components/elements/Header\";\r\nimport Footer from \"../components/elements/Footer\";\r\n\r\nclass DefaultLayout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div classNam=\"edica-loader\"></div>\r\n                <Header />\r\n                {this.props.children}\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DefaultLayout;","D:\\Project\\Blog\\blog-web\\src\\i18nextConf.js",[],"D:\\Project\\Blog\\blog-web\\src\\components\\elements\\Loader.js",["200"],"import React from \"react\";\r\nconst Loader = (props) => {\r\n\r\n    return (\r\n        <div className=\"loader-container\" >\r\n            <div className=\"loader\" >\r\n                <img src='/assets/images/loader.gif' />\r\n            </div >\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Loader;",{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":32,"column":16,"nodeType":"207","messageId":"208","endLine":32,"endColumn":20},{"ruleId":"205","severity":1,"message":"209","line":39,"column":37,"nodeType":"207","messageId":"208","endLine":39,"endColumn":42},{"ruleId":"210","severity":1,"message":"211","line":169,"column":45,"nodeType":"212","endLine":169,"endColumn":475},{"ruleId":"205","severity":1,"message":"213","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":25},{"ruleId":"205","severity":1,"message":"206","line":29,"column":16,"nodeType":"207","messageId":"208","endLine":29,"endColumn":20},{"ruleId":"205","severity":1,"message":"214","line":30,"column":12,"nodeType":"207","messageId":"208","endLine":30,"endColumn":17},{"ruleId":"205","severity":1,"message":"215","line":30,"column":19,"nodeType":"207","messageId":"208","endLine":30,"endColumn":27},{"ruleId":"205","severity":1,"message":"216","line":31,"column":12,"nodeType":"207","messageId":"208","endLine":31,"endColumn":20},{"ruleId":"205","severity":1,"message":"217","line":31,"column":22,"nodeType":"207","messageId":"208","endLine":31,"endColumn":33},{"ruleId":"218","severity":1,"message":"219","line":41,"column":50,"nodeType":"220","messageId":"221","endLine":41,"endColumn":51},{"ruleId":"222","severity":1,"message":"223","line":101,"column":8,"nodeType":"224","endLine":101,"endColumn":10,"suggestions":"225"},{"ruleId":"205","severity":1,"message":"226","line":120,"column":14,"nodeType":"207","messageId":"208","endLine":120,"endColumn":27},{"ruleId":"227","severity":1,"message":"228","line":180,"column":94,"nodeType":"220","messageId":"229","endLine":180,"endColumn":96},{"ruleId":"205","severity":1,"message":"230","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":15},{"ruleId":"205","severity":1,"message":"231","line":9,"column":27,"nodeType":"207","messageId":"208","endLine":9,"endColumn":39},{"ruleId":"205","severity":1,"message":"232","line":9,"column":41,"nodeType":"207","messageId":"208","endLine":9,"endColumn":61},{"ruleId":"205","severity":1,"message":"233","line":9,"column":63,"nodeType":"207","messageId":"208","endLine":9,"endColumn":74},{"ruleId":"205","severity":1,"message":"214","line":22,"column":12,"nodeType":"207","messageId":"208","endLine":22,"endColumn":17},{"ruleId":"205","severity":1,"message":"215","line":22,"column":19,"nodeType":"207","messageId":"208","endLine":22,"endColumn":27},{"ruleId":"205","severity":1,"message":"234","line":27,"column":12,"nodeType":"207","messageId":"208","endLine":27,"endColumn":22},{"ruleId":"205","severity":1,"message":"235","line":27,"column":24,"nodeType":"207","messageId":"208","endLine":27,"endColumn":37},{"ruleId":"205","severity":1,"message":"209","line":36,"column":37,"nodeType":"207","messageId":"208","endLine":36,"endColumn":42},{"ruleId":"227","severity":1,"message":"228","line":80,"column":58,"nodeType":"220","messageId":"229","endLine":80,"endColumn":60},{"ruleId":"222","severity":1,"message":"236","line":103,"column":8,"nodeType":"224","endLine":103,"endColumn":10,"suggestions":"237"},{"ruleId":"218","severity":1,"message":"219","line":106,"column":56,"nodeType":"220","messageId":"221","endLine":106,"endColumn":57},{"ruleId":"218","severity":1,"message":"219","line":130,"column":60,"nodeType":"220","messageId":"221","endLine":130,"endColumn":61},{"ruleId":"218","severity":1,"message":"219","line":143,"column":46,"nodeType":"220","messageId":"221","endLine":143,"endColumn":47},{"ruleId":"238","severity":1,"message":"239","line":225,"column":57,"nodeType":"212","endLine":225,"endColumn":188},{"ruleId":"205","severity":1,"message":"240","line":17,"column":13,"nodeType":"207","messageId":"208","endLine":17,"endColumn":14},{"ruleId":"205","severity":1,"message":"241","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":26},{"ruleId":"205","severity":1,"message":"213","line":1,"column":28,"nodeType":"207","messageId":"208","endLine":1,"endColumn":36},{"ruleId":"205","severity":1,"message":"242","line":1,"column":38,"nodeType":"207","messageId":"208","endLine":1,"endColumn":47},{"ruleId":"205","severity":1,"message":"243","line":3,"column":10,"nodeType":"207","messageId":"208","endLine":3,"endColumn":16},{"ruleId":"205","severity":1,"message":"206","line":28,"column":16,"nodeType":"207","messageId":"208","endLine":28,"endColumn":20},{"ruleId":"227","severity":1,"message":"228","line":66,"column":103,"nodeType":"220","messageId":"229","endLine":66,"endColumn":105},{"ruleId":"244","severity":1,"message":"245","line":67,"column":77,"nodeType":"212","endLine":67,"endColumn":224},{"ruleId":"246","severity":1,"message":"247","line":67,"column":77,"nodeType":"212","endLine":67,"endColumn":224},{"ruleId":"248","severity":1,"message":"249","line":67,"column":118,"nodeType":"250","messageId":"251","endLine":67,"endColumn":139},{"ruleId":"238","severity":1,"message":"239","line":67,"column":224,"nodeType":"212","endLine":67,"endColumn":386},{"ruleId":"244","severity":1,"message":"245","line":70,"column":49,"nodeType":"212","endLine":72,"endColumn":52},{"ruleId":"248","severity":1,"message":"249","line":70,"column":79,"nodeType":"250","messageId":"251","endLine":70,"endColumn":100},{"ruleId":"244","severity":1,"message":"245","line":75,"column":43,"nodeType":"212","endLine":77,"endColumn":44},{"ruleId":"248","severity":1,"message":"249","line":75,"column":68,"nodeType":"250","messageId":"251","endLine":75,"endColumn":89},{"ruleId":"244","severity":1,"message":"245","line":126,"column":44,"nodeType":"212","endLine":126,"endColumn":58},{"ruleId":"205","severity":1,"message":"252","line":2,"column":25,"nodeType":"207","messageId":"208","endLine":2,"endColumn":28},{"ruleId":"205","severity":1,"message":"253","line":2,"column":30,"nodeType":"207","messageId":"208","endLine":2,"endColumn":33},{"ruleId":"205","severity":1,"message":"254","line":4,"column":10,"nodeType":"207","messageId":"208","endLine":4,"endColumn":14},{"ruleId":"205","severity":1,"message":"255","line":12,"column":11,"nodeType":"207","messageId":"208","endLine":12,"endColumn":26},{"ruleId":"244","severity":1,"message":"245","line":64,"column":32,"nodeType":"212","endLine":64,"endColumn":46},{"ruleId":"205","severity":1,"message":"242","line":1,"column":17,"nodeType":"207","messageId":"208","endLine":1,"endColumn":26},{"ruleId":"205","severity":1,"message":"256","line":2,"column":25,"nodeType":"207","messageId":"208","endLine":2,"endColumn":32},{"ruleId":"205","severity":1,"message":"206","line":33,"column":16,"nodeType":"207","messageId":"208","endLine":33,"endColumn":20},{"ruleId":"205","severity":1,"message":"209","line":41,"column":37,"nodeType":"207","messageId":"208","endLine":41,"endColumn":42},{"ruleId":"244","severity":1,"message":"245","line":144,"column":31,"nodeType":"212","endLine":144,"endColumn":84},{"ruleId":"244","severity":1,"message":"245","line":145,"column":49,"nodeType":"212","endLine":145,"endColumn":102},{"ruleId":"205","severity":1,"message":"206","line":34,"column":16,"nodeType":"207","messageId":"208","endLine":34,"endColumn":20},{"ruleId":"205","severity":1,"message":"209","line":41,"column":37,"nodeType":"207","messageId":"208","endLine":41,"endColumn":42},{"ruleId":"244","severity":1,"message":"245","line":154,"column":40,"nodeType":"212","endLine":154,"endColumn":97},{"ruleId":"205","severity":1,"message":"252","line":2,"column":25,"nodeType":"207","messageId":"208","endLine":2,"endColumn":28},{"ruleId":"205","severity":1,"message":"253","line":2,"column":30,"nodeType":"207","messageId":"208","endLine":2,"endColumn":33},{"ruleId":"205","severity":1,"message":"206","line":24,"column":16,"nodeType":"207","messageId":"208","endLine":24,"endColumn":20},{"ruleId":"244","severity":1,"message":"245","line":81,"column":36,"nodeType":"212","endLine":81,"endColumn":92},{"ruleId":"205","severity":1,"message":"230","line":2,"column":10,"nodeType":"207","messageId":"208","endLine":2,"endColumn":15},{"ruleId":"205","severity":1,"message":"257","line":10,"column":10,"nodeType":"207","messageId":"208","endLine":10,"endColumn":22},{"ruleId":"205","severity":1,"message":"258","line":11,"column":10,"nodeType":"207","messageId":"208","endLine":11,"endColumn":19},{"ruleId":"205","severity":1,"message":"259","line":11,"column":21,"nodeType":"207","messageId":"208","endLine":11,"endColumn":31},{"ruleId":"205","severity":1,"message":"260","line":11,"column":33,"nodeType":"207","messageId":"208","endLine":11,"endColumn":43},{"ruleId":"205","severity":1,"message":"261","line":35,"column":12,"nodeType":"207","messageId":"208","endLine":35,"endColumn":20},{"ruleId":"205","severity":1,"message":"209","line":38,"column":37,"nodeType":"207","messageId":"208","endLine":38,"endColumn":42},{"ruleId":"222","severity":1,"message":"262","line":55,"column":8,"nodeType":"224","endLine":55,"endColumn":10,"suggestions":"263"},{"ruleId":"238","severity":1,"message":"239","line":103,"column":49,"nodeType":"212","endLine":103,"endColumn":170},{"ruleId":"201","replacedBy":"264"},{"ruleId":"203","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":1,"column":1,"nodeType":"268","endLine":6,"endColumn":3},{"ruleId":"269","severity":1,"message":"270","line":17,"column":13,"nodeType":"271","messageId":"272","endLine":17,"endColumn":19},{"ruleId":"269","severity":1,"message":"270","line":24,"column":13,"nodeType":"271","messageId":"272","endLine":24,"endColumn":19},{"ruleId":"269","severity":1,"message":"270","line":31,"column":13,"nodeType":"271","messageId":"272","endLine":31,"endColumn":19},{"ruleId":"273","severity":1,"message":"274","line":6,"column":5,"nodeType":"275","messageId":"276","endLine":8,"endColumn":6},{"ruleId":"238","severity":1,"message":"239","line":7,"column":17,"nodeType":"212","endLine":7,"endColumn":56},"no-native-reassign",["277"],"no-negated-in-lhs",["278"],"no-unused-vars","'i18n' is assigned a value but never used.","Identifier","unusedVar","'watch' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'useState' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'setIsLoaded' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activepage', 'getArticleList', 'getOneBlockList', and 'getPopularArticle'. Either include them or remove the dependency array.","ArrayExpression",["279"],"'fetchMoreData' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'Modal' is defined but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","'activepage' is assigned a value but never used.","'setActivePage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getComment', 'props.history', 'props.location.pathname', and 'props.location.state'. Either include them or remove the dependency array.",["280"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'t' is assigned a value but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/role-supports-aria-props","The attribute aria-haspopup is not supported by the role link. This role is implicit on the element a.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'Row' is defined but never used.","'Col' is defined but never used.","'Link' is defined but never used.","'signupModelShow' is assigned a value but never used.","'Spinner' is defined but never used.","'saveAuthData' is defined but never used.","'loginShow' is defined but never used.","'signUpShow' is defined but never used.","'forgotShow' is defined but never used.","'userData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.data.authData.setIsLogin' and 'props.history'. Either include them or remove the dependency array. If 'setToken' needs the current value of 'props.data.authData.setIsLogin', you can also switch to useReducer instead of useState and read 'props.data.authData.setIsLogin' in the reducer.",["281"],["277"],["278"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},"Update the dependencies array to be: [activepage, getArticleList, getOneBlockList, getPopularArticle]",{"range":"288","text":"289"},"Update the dependencies array to be: [getComment, props.history, props.location.pathname, props.location.state]",{"range":"290","text":"291"},"Update the dependencies array to be: [props.data.authData.setIsLogin, props.history]",{"range":"292","text":"293"},[3129,3131],"[activepage, getArticleList, getOneBlockList, getPopularArticle]",[3720,3722],"[getComment, props.history, props.location.pathname, props.location.state]",[2232,2234],"[props.data.authData.setIsLogin, props.history]"]